struct Cat {
    public int8 age;
    public ptr string name;
}

struct Program {

    public static void Main() {

        Cat cat = Cat(); // 默认为 snew Cat(), 不用加关键词 snew
        cat.age = 10;
        cat.name = "Tom";

        Test_vc(cat); // 默认为 vc, 不用加关键词. 传递的是值的拷贝
        Test_rptr(rptr cat);
        Test_ptr(ptr cat);
        Test_cptr(cptr cat);

    }

    staic void Test_vc(vc Cat cat) {

        // cat 是一个栈上的值的拷贝

        cat = snew Cat(); // allowed
        cat.age = 10; // allowed
        cat.name = "Tom"; // allowed
    }

    staic void Test_rptr(rptr Cat p_cat) {
        p_cat = hnew Cat(); // error
        p_cat.age = 10; // error
        p_cat.name = "Tom"; // error

        int8 age = p_cat.age; // allowed
    }

    staic void Test_ptr(ptr Cat p_cat) {
        p_cat = hnew Cat(); // allowed
        p_cat.age = 10; // allowed
        p_cat.name = "Tom"; // allowed

        Cat cat_b = Cat();
        p_cat -> cat_b; // allowed
    }

    static void Test_cptr(cptr Cat p_cat) {
        p_cat = hnew Cat(); // error
        p_cat.age = 10; // allowed
        p_cat.name = "Tom"; // allowed

        Cat cat_b = Cat();
        p_cat -> cat_b; // error
    }

    
}